<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">

<properties>
	<entry key="count-all-pboard-list">
		SELECT COUNT(*) FROM BOARD
		WHERE BOARD_CD = ?
		AND STATUS_CD = 1
	</entry>
	
	<entry key="selectPboardList">
		            SELECT CC.*, (SELECT COUNT(*) FROM "LIKE"  D WHERE D.BOARD_NO = CC.BOARD_NO) LIKECOUNT ,
      (SELECT COUNT(*) FROM REPLY  E WHERE E.BOARD_NO = CC.BOARD_NO AND STATUS_CD != 2) REPLYCOUNT,
      (SELECT COUNT(*) FROM "LIKE"  F WHERE F.BOARD_NO = CC.BOARD_NO 
      AND F.MEMBER_NO = ?) LIKEDONE
       FROM  (SELECT BB.*
            FROM( 
            SELECT ROWNUM RNUM, AA.*
          FROM ( SELECT  A.BOARD_NO , A.BOARD_TITLE, A.BOARD_CONTENT, A.READ_COUNT , A.BOARD_CD,   
          CASE WHEN SYSDATE -A.CREATE_DT > 1
        THEN  TO_CHAR(A.CREATE_DT , 'YYYY-MM-DD')
        ELSE TO_CHAR(A.CREATE_DT , 'HH24:MI:SS') END AS "CREATE_DT",
         A.STATUS_CD, A.MEMBER_NO, C.MEMBER_NM
          , B.BOARD_NAME , C.MEMBER_ID, C.ANIMAL_PROFILE_IMG FROM BOARD A
            JOIN BOARD_CODE  B ON (A.BOARD_CD = B.BOARD_CD)
            JOIN MEMBER  C ON (A.MEMBER_NO = C.MEMBER_NO)
          WHERE A.STATUS_CD != 2 AND A.BOARD_CD = ?
            ORDER BY BOARD_NO DESC) AA) BB
            WHERE RNUM BETWEEN ? AND ? ) CC
            ORDER BY RNUM
		
	</entry>
	<entry key="selectPboardImageList">
		SELECT * FROM BOARD_PIC
		WHERE BOARD_NO = ?
		ORDER BY BOARD_PIC_LEVEL
	</entry>
	
	<!-- 상세페이지 조회 -->
	<entry key="selectPboard">
		     SELECT DD.* 
            FROM
            (SELECT CC.* ,
            (SELECT COUNT(*) FROM "LIKE"  D WHERE D.BOARD_NO = CC.BOARD_NO) LIKECOUNT ,
            (SELECT COUNT(*) FROM REPLY  E WHERE E.BOARD_NO = CC.BOARD_NO) REPLYCOUNT ,
            (SELECT COUNT(*) FROM "LIKE"  F WHERE F.BOARD_NO = CC.BOARD_NO 
            AND F.MEMBER_NO = ?) LIKEDONE 
            FROM (
             SELECT  A.BOARD_NO , A.BOARD_TITLE, A.BOARD_CONTENT, A.READ_COUNT , A.BOARD_CD,
             CASE WHEN SYSDATE - A.CREATE_DT > 1
            THEN  TO_CHAR(A.CREATE_DT , 'YYYY-MM-DD')
            ELSE TO_CHAR(A.CREATE_DT , 'HH24:MI:SS') END AS "CREATE_DT",
             A.STATUS_CD, A.MEMBER_NO, C.MEMBER_NM, C.ANIMAL_PROFILE_IMG,
               B.BOARD_NAME , C.MEMBER_ID FROM BOARD A
                JOIN BOARD_CODE  B ON (A.BOARD_CD = B.BOARD_CD)
                JOIN MEMBER  C ON (A.MEMBER_NO = C.MEMBER_NO)
                WHERE A.STATUS_CD != 2 AND A.BOARD_NO = ?) CC) DD 
                LEFT JOIN ANIMAL G ON ( G.MEMBER_NO = DD.MEMBER_NO)
                LEFT JOIN ANIMAL_IMG H ON ( H.ANIMAL_NO = G.ANIMAL_NO) 
                WHERE ANIMAL_IMG_LEVEL =0 OR ANIMAL_IMG_LEVEL IS NULL
	</entry>
	
	<!-- 조회수 증가 -->
	<entry key="increaseReadCount">
		UPDATE BOARD SET
		READ_COUNT = READ_COUNT + 1
		WHERE BOARD_NO = ?
	</entry>
	
	<!-- board 이름 가져오기 -->
	<entry key="boardNmCh">
		SELECT BOARD_NAME
		FROM BOARD_CODE
		WHERE BOARD_CD =?
	</entry>
	
	<!-- 좋아요 증가 -->
	<entry key="updateLikeCount">
		INSERT INTO "LIKE"
		VALUES(?, ?)
	</entry>
	
	<!-- 좋아요 삭제 -->
	<entry key="unLike">
		DELETE FROM "LIKE"
		WHERE MEMBER_NO =?
		AND BOARD_NO =?
	</entry>
	
	<!-- 좋아요 조회 -->
	<entry key="likeselect">
		    SELECT COUNT(*) FROM "LIKE" WHERE BOARD_NO = ? 
	</entry>
</properties>